#! /usr/bin/env bash

set -e 
if [ "${1}" = "-h" ]; then
  printf "Usage:\n"
  printf "  %s handler_directory (list of directories to watch)\n" $(basename $0)
  exit 0
fi

HANDLER_DIR=${1?You need to provide a directory containing event handlers}
shift

if [ $# -eq 0 ]; then
  printf "You must provide a list of directories to watch"
  exit 1
fi
WATCH_DIRS=${@}

function exec_and_continue(){
  set +e
  $1 $2
  set -e
}

function abspath {
    if [[ -d "$1" ]]; then
        pushd "$1" >/dev/null
        pwd
        popd >/dev/null
    elif [[ -e $1 ]]; then
        pushd "$(dirname "$1")" >/dev/null
        echo "$(pwd)/$(basename "$1")"
        popd >/dev/null
    elif [[ ${1:0:1} != "/" ]]; then
        echo "$(pwd)/${1}"
    else
        # it's already absolute
        echo "$1"
    fi
}

while read -r line;
do
  # we want the absolute path so we can pass it to our handlers
  FILE_PATH=$(abspath $line)
  # as a convenience we allow handlers by extension, so we'll pick off the extension
  # for use in finding any handlers we may have
  EXT=${FILE_PATH##*.}
  # first we fire the 'everytime' handler if it exists, this one
  # gets called all the time, more specific handlers will be called after this one
  if [ -x "${HANDLER_DIR}/handle_file_change.everytime" ]; then
    exec_and_continue "${HANDLER_DIR}/handle_file_change.everytime" "${FILE_PATH}"
  fi
  # the first one of these handlers to 'hit' will cause the execution of
  # further handlers to stop, and we'll move on to the next event. First we
  # fire the 'all' handler if it exists.
  if [ -x "${HANDLER_DIR}/handle_file_change.all" ]; then
    exec_and_continue "${HANDLER_DIR}/handle_file_change.all" "${FILE_PATH}"
    continue
  fi
  # then we fire any individual file handlers we have (by extension)
  if [ -x "${HANDLER_DIR}/handle_file_change.${EXT}" ]; then
    exec_and_continue "${HANDLER_DIR}/handle_file_change.${EXT}" "${FILE_PATH}"
    continue
  fi
  # if we've not handled anything we give the chance to the 'any' handler
  # this one will only fire in the case that the neither the all nor a extension
  # specific handler has fired
  if [ -x "${HANDLER_DIR}/handle_file_change.any" ]; then
    exec_and_continue "${HANDLER_DIR}/handle_file_change.any" "${FILE_PATH}"
    continue
  fi
done < <(inotifywait -e close_write,delete --format '%w%f' -m -r ${WATCH_DIRS})
